//
// CommentAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import UIKit

open class CommentAPI {
    /**
     相关新闻列表
     
     - parameter nid: (query) 新闻ID 
     - parameter p: (query) 新闻ID (optional, default to 1)
     - parameter c: (query) 新闻ID (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func nsAscGet(nid: String, p: String? = nil, c: String? = nil, completion: @escaping ((_ data: AnyObject?, _ error: Error?) -> Void)) {
        
        let path = "/ns/asc"
        let URLString = SimpleRequest.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "nid": nid as Optional<AnyObject>,
            "p": p as Optional<AnyObject>,
            "c": c as Optional<AnyObject>
        ]
        
        let parameters = APIHelper.rejectNil(nillableParameters)
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        
        SimpleRequest.budileRequest(URLString, method: .get, parameters: convertedParameters, encoding: URLEncoding.default, headers: nil).request { (data, _, _) in
            completion(data as AnyObject?, nil)
        }
    }

    /**
     普通评论列表
     
     - parameter did: (query) 新闻 docid 
     - parameter uid: (query) 注册用户ID，提供该ID会在响应中设置该用户的点赞标记 upflag (optional)
     - parameter p: (query) 请求的页数 (optional, default to 1)
     - parameter c: (query) 每页的个数 (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func nsComsCGet(did: String, uid: String? = nil, p: String? = nil, c: String? = nil, completion: @escaping ((_ data: AnyObject?, _ error: Error?) -> Void)) {
        let path = "/ns/coms/c"
        let URLString = SimpleRequest.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "did": did as Optional<AnyObject>,
            "uid": uid as Optional<AnyObject>,
            "p": p as Optional<AnyObject>,
            "c": c as Optional<AnyObject>
        ]
        
        let parameters = APIHelper.rejectNil(nillableParameters)
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        
        SimpleRequest.budileRequest(URLString, method: .get, parameters: convertedParameters, encoding: URLEncoding.default, headers: nil).request { (data, _, _) in
            
            completion(data as AnyObject?, nil)
        }
    }

    /**
     热点评论列表
     
     - parameter did: (query) 新闻 docid 
     - parameter uid: (query) 注册用户ID，提供该ID会在响应中设置该用户的点赞标记 upflag (optional)
     - parameter p: (query) 新闻ID (optional, default to 1)
     - parameter c: (query) 新闻ID (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func nsComsHGet(did: String, uid: String? = nil, p: String? = nil, c: String? = nil, completion: @escaping ((_ data: AnyObject?, _ error: Error?) -> Void)) {
        let path = "/ns/coms/h"
        let URLString = SimpleRequest.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "did": did as Optional<AnyObject>,
            "uid": uid as Optional<AnyObject>,
            "p": p as Optional<AnyObject>,
            "c": c as Optional<AnyObject>
        ]
        
        let parameters = APIHelper.rejectNil(nillableParameters)
        
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        SimpleRequest.budileRequest(URLString, method: .get, parameters: convertedParameters, encoding: URLEncoding.default, headers: nil).request { (data, _, _) in
            completion(data as AnyObject?, nil)
        }
    }
}
